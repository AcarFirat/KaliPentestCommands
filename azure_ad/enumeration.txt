Inspired by Pentester Academy - Attacking and Defending Azure Active Directory
Ways to enumerate Azure Active Directory after getting initial access:

    Use Az Powershell to enumerate:
        Good cheat sheet: https://slstudentpublic.blob.core.windows.net/operations/PowerShell%20Guide_Skylines%20Academy_AZ.pdf

        Step 1: Install-Module Az
        Step 2: connect to Azure AD (can do it interactively, but we use PSCredentials)
            syntax : $passwd = ConvertTo-SecureString "<password>" -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential("<username>@<domain>", $passwd); Connect-AzAccount -Credential $creds
            example: $passwd = ConvertTo-SecureString "D3v0Ops123!" -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential("dev@ecorp.com", $passwd); Connect-AzAccount -Credential $creds
            # connect using access token
            syntax : Connect-AzAccount -AccessToken <accessToken> -AccountId "<accountId>"
            example: Connect-AzAccount -AccessToken "eYJ0..." -AccountId "2e91e3dd-b1f2-46ee-8214-fa2ff6ba9abc"
            example: Connect-AzAccount -AccessToken "eYJ0..." -AccountId "2e91e3dd-b1f2-46ee-8214-fa2ff6ba9abc" -GraphAccessToken "eYJ0..."
            example: Connect-AzAccount -AccessToken "eYJ0..." -AccountId "2e91e3dd-b1f2-46ee-8214-fa2ff6ba9abc" -KeyvaultAccessToken "eYJ0..."
        Step 3: use the tool
            Get accessible resources:
                example: Get-AzResource
            
            Get role assignments to a resource:
                syntax : Get-AzRoleAssignment -Scope <resourceID>
                example: Get-AzRoleAssignment -Scope <resourceID>

            Get information about a role:
                syntax : Get-AzRoleDefinition -Name <roleName>
                example: Get-AzRoleDefinition -Name "Reader"

            Get information about a group:
                syntax : Get-AzAdGroup -DisplayName <groupName>
                example: Get-AzAdGroup -DisplayName "On-Prem Admins"

            Get access token for Microsoft Graph API:
                example: (Get-AzAccessToken -ResourceUrl https://graph.microsoft.com).Token

    Use AzureAD to enumerate:
        # There's too many commands to list, so check out https://docs.microsoft.com/en-us/powershell/module/azuread/?view=azureadps-2.0 for more

        Step 1: Install-Module AzureAD
        Step 2: connect to Azure AD (can do it interactively, but we use PSCredentials)
            syntax : $passwd = ConvertTo-SecureString "<password>" -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential("<username>@<domain>", $passwd); Connect-AzureAD -Credential $creds
            example: $passwd = ConvertTo-SecureString "D3v0Ops123!" -AsPlainText -Force; $creds = New-Object System.Management.Automation.PSCredential("dev@ecorp.com", $passwd); Connect-AzureAD -Credential $creds
        Step 3: use the tool
            Get details of current tenant:
                example: Get-AzureADTenantDetail

            Enumerate all users
                example: Get-AzureADUser -All $true 

            Enumerate a specific user
                syntax : Get-AzureADUser -ObjectId <username>@<domain>
                example: Get-AzureADUser -ObjectId hr@ecorp.com

            Search for a user based on string in first characters of DisplayName or userPrincipalName 
                syntax : Get-AzureADUser -SearchString "<word>"
                example: Get-AzureADUser -SearchString "admin" 

            Search for users who contain a certain word in their Display name:
               syntax : Get-AzureADUser -All $true | ?{$_.Displayname -match "<word>"}
               example: Get-AzureADUser -All $true | ?{$_.Displayname -match "admin"}

            List all attributes for a user:
                syntax : Get-AzureADUser -ObjectId <username>@<domain> | fl * 
                example: Get-AzureADUser -ObjectId dev@ecorp.com | fl * 
                  
                syntax : Get-AzureADUser -ObjectId  | %{$_.PSObject.Properties.Name}
                example: Get-AzureADUser -ObjectId dev@ecorp.com |  %{$_.PSObject.Properties.Name}

    Enumerate Azure using Microburst(https://github.com/NetSPI/MicroBurst.git)
        Step 1: Import-Module MicroBurst.psm1
        Step 2: Enumerate Azure
            Search for insecure storage blobs with public access (add words to MicroBurst/Misc/permutations.txt to enumerate more specifically) 
                syntax : Invoke-EnumerateAzureBlobs -Base <word>    # word would be something resembling the tenant's name
                example: Invoke-EnumerateAzureBlobs -Base ecorp
