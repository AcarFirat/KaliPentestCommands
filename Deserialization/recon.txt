When pentesting a web application, if you see a cookie or token that gets decoded in an unsafe manner (base64...),
then the webapp might be vulnerable to deserialization, possibly leading to remote code execution.

	example: everytime you browse to somewhere on a webpage, a call to an API requests a decoded base64 jwt token
		 by sending a base64 encoded bearer token in the request header
		 # 1eyJJZCI6MSwiVXNlcm5hbWUiOiJhZG1pbiIsIlBhc3N3b3JkIjoiMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMiLCJSb2xlIjoiYWRtaW4ifQ==

		You can generate a malicious payload via ysoserial or any other tool for the target webapp (the language the webapp is written in is important)
		and send that payload as the bearer token instead to remotely execute commands or read/upload files.
